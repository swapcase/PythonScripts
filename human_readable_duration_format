"""
A function which formats a duration, given as a number of seconds, in a human-friendly way.

The function must accept a non-negative integer. 
If it is zero, it just returns "now". 
Otherwise, the duration is expressed as a combination of years, days, hours, minutes and seconds.

Detailed rules

The resulting expression is made of components like 4 seconds, 1 year, etc. 
In general, a positive integer and one of the valid units of time, separated by a space. 
The unit of time is used in plural if the integer is greater than 1.

The components are separated by a comma and a space (", "). 
Except the last component, which is separated by " and ", just like it would be written in English.

A more significant units of time will occur before than a least significant one. 
Therefore, 1 second and 1 year is not correct, but 1 year and 1 second is.

Different components have different unit of times. 
So there is not repeated units like in 5 seconds and 1 second.

A component will not appear at all if its value happens to be zero. 
Hence, 1 minute and 0 seconds is not valid, but it should be just 1 minute.

A unit of time must be used "as much as possible". 
It means that the function should not return 61 seconds, but 1 minute and 1 second instead. 
Formally, the duration specified by of a component must not be greater than any valid more significant unit of time.
"""

def format_duration(seconds):
    """Human readable duration format and human readable code"""
    
    # single and plural forms
    dic = {'years': ('year','years'),
          'days': ('day','days'),
          'hours': ('hour','hours'),
          'minutes': ('minute', 'minutes'),
          'seconds': ('second', 'seconds')}
    
    # Output list
    output = []
    
    # Empty or zero
    if seconds == 0 or seconds == None:
        return 'now'
    
    
    # Years
    years = seconds//31536000
    if years > 0:
        if years == 1:
            x = dic['years'][0]
            output.append(f'{years} {x}')
        else:
            x = dic['years'][1]
            output.append(f'{years} {x}')
        seconds = seconds - years*31536000
    
    # Days
    days = seconds//86400
    if days > 0:
        if days == 1:
            x = dic['days'][0]
            output.append(f'{days} {x}')
        else:
            x = dic['days'][1]
            output.append(f'{days} {x}')
        seconds = seconds - days*86400
        
    # Hours
    hours = seconds//3600
    if hours > 0:
        if hours == 1:
            x = dic['hours'][0]
            output.append(f'{hours} {x}')
        else:
            x = dic['hours'][1]
            output.append(f'{hours} {x}')
        seconds = seconds - hours*3600
        
    # Minutes
    minutes = seconds//60
    if minutes > 0:
        if minutes == 1:
            x = dic['minutes'][0]
            output.append(f'{minutes} {x}')
        else:
            x = dic['minutes'][1]
            output.append(f'{minutes} {x}')
        seconds = seconds - minutes*60
    
    # Seconds
    if seconds > 0:
        if seconds == 1:
            x = dic['seconds'][0]
            output.append(f'{seconds} {x}')
        else:
            x = dic['seconds'][1]
            output.append(f'{seconds} {x}')
            
    # Concatenate and Return the result
    if len(output) > 2:
        return ', '.join(output[:-1])+f' and {output[-1]}'
    if len(output) == 1:
        return output[0]
    else:
        return f'{output[0]} and {output[1]}'
